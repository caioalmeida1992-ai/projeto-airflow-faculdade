import streamlit as st
import pandas as pd
import os
from datetime import datetime

# Configura√ß√£o da P√°gina
st.set_page_config(page_title="Avalia√ß√£o de Viagem - Clickbus", layout="centered")

st.title("üìù Formul√°rio de Avalia√ß√£o de Viagem")
st.write(
    "Ol√°! Por favor, preencha os campos abaixo para registrar a sua experi√™ncia com a Clickbus. "
    "Sua avalia√ß√£o nos ajudar√° a recomendar suas pr√≥ximas viagens!"
)
st.markdown("---")

CSV_FILE = 'data/novas_avaliacoes.csv'

# --- Formul√°rio de Coleta ---
# Usar st.form garante que a p√°gina n√£o recarregue a cada intera√ß√£o do usu√°rio,
# apenas quando o bot√£o de envio dentro do formul√°rio for clicado.
with st.form("avaliacao_form", clear_on_submit=True):
    st.subheader("Detalhes da Viagem")

    # Campos do formul√°rio
    id_cliente = st.text_input(
        "Seu ID de Cliente",
        help="Insira seu identificador √∫nico de cliente (ex: cliente123)."
    )
    destino = st.text_input(
        "Destino da Viagem",
        placeholder="Ex: Salvador, BA"
    )

    # Organiza as datas
    col1, col2 = st.columns(2)
    with col1:
        data_inicio = st.date_input(
            "Data de In√≠cio",
            value=datetime.today(),
            max_value=datetime.today()
        )
    with col2:
        data_fim = st.date_input(
            "Data de Fim",
            value=datetime.today(),
            max_value=datetime.today()
        )

    st.subheader("Sua Avalia√ß√£o")
    nota_experiencia = st.slider(
        "Nota para a Experi√™ncia Geral da Viagem (de 0 a 5)",
        min_value=0,
        max_value=5,
        value=3  # Valor padr√£o
    )
    nota_destino = st.slider(
        "Nota para o Destino Visitado (de 0 a 5)",
        min_value=0,
        max_value=5,
        value=3  # Valor padr√£o
    )

    # Bot√£o de envio do formul√°rio
    submitted = st.form_submit_button("‚úîÔ∏è Enviar Avalia√ß√£o")

# --- L√≥gica de Processamento ao Enviar ---
if submitted:
    # Valida√ß√£o simples dos campos
    if not id_cliente or not destino:
        st.error("Por favor, preencha os campos 'ID do Cliente' e 'Destino'.")
    elif data_fim < data_inicio:
        st.error("A 'Data de Fim' n√£o pode ser anterior √† 'Data de In√≠cio'.")
    else:
        # Salva tudo num dicion√°rio que ser√° convertido depois
        nova_avaliacao = {
            'id_cliente': [id_cliente],
            'destino': [destino],
            'data_inicio': [data_inicio.strftime('%Y-%m-%d')],
            'data_fim': [data_fim.strftime('%Y-%m-%d')],
            'nota_experiencia': [nota_experiencia],
            'nota_destino': [nota_destino]
        }

        # Converte o dic para um DataFrame
        df_nova_avaliacao = pd.DataFrame(nova_avaliacao)

        # L√≥gica para salvar no arquivo CSV
        # Verifica se o arquivo j√° existe para decidir se escreve o cabe√ßalho
        header = not os.path.exists(CSV_FILE)

        df_nova_avaliacao.to_csv(
            CSV_FILE,  # Nome do arquivo
            mode='a',  # 'a' para 'append' (adicionar ao final do arquivo)
            header=header,  # Escreve o cabe√ßalho apenas se o arquivo n√£o existir
            index=False  # N√£o salva o √≠ndice do DataFrame no arquivo
        )

        st.success("‚úÖ Avalia√ß√£o enviada com sucesso! Obrigado por contribuir.")

# --- Trecho opcional para visualiza√ß√£o dos dados brutos na pr√≥pria p√°gina ap√≥s serem inseridos---
# --- Serve tamb√©m como uma reafirma√ß√£o de que o cadastro foi realizado, al√©m da mensagem de sucesso
st.markdown("---")
st.header("Dados Brutos Aguardando Processamento")

if os.path.exists(CSV_FILE):
    df_raw = pd.read_csv(CSV_FILE)
    st.dataframe(df_raw)
else:
    st.info("Ainda n√£o h√° avalia√ß√µes para serem processadas. Envie a primeira!")